// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package test

import (
	fmt "fmt"
	gerr "github.com/driftingboy/protoc-gen-go-errors/gerr"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = gerr.SupportPackageIsVersion1

var bizErrorCodeMap map[string]int = map[string]int{

	"TestErrorReason_TestNotFound": 100001,
	"TestErrorReason_TestBusy":     100002,
	"TestErrorReason_TestIncrease": 100010,
	"TestErrorReason_TestRedirect": 100011,
}

func IsTestNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := gerr.FromError(err)
	return e.Reason == "TestErrorReason_TestNotFound" && e.Code == 404
}

func ErrorTestNotFound(format string, args ...interface{}) *gerr.Error {
	return gerr.New(404, "TestErrorReason_TestNotFound", fmt.Sprintf(format, args...))
}

func IsTestBusy(err error) bool {
	if err == nil {
		return false
	}
	e := gerr.FromError(err)
	return e.Reason == "TestErrorReason_TestBusy" && e.Code == 500
}

func ErrorTestBusy(format string, args ...interface{}) *gerr.Error {
	return gerr.New(500, "TestErrorReason_TestBusy", fmt.Sprintf(format, args...))
}

func IsTestIncrease(err error) bool {
	if err == nil {
		return false
	}
	e := gerr.FromError(err)
	return e.Reason == "TestErrorReason_TestIncrease" && e.Code == 502
}

func ErrorTestIncrease(format string, args ...interface{}) *gerr.Error {
	return gerr.New(502, "TestErrorReason_TestIncrease", fmt.Sprintf(format, args...))
}

func IsTestRedirect(err error) bool {
	if err == nil {
		return false
	}
	e := gerr.FromError(err)
	return e.Reason == "TestErrorReason_TestRedirect" && e.Code == 302
}

func ErrorTestRedirect(format string, args ...interface{}) *gerr.Error {
	return gerr.New(302, "TestErrorReason_TestRedirect", fmt.Sprintf(format, args...))
}

func BizErrorCode(err error) int {
	if err == nil {
		return 0
	}
	e := gerr.FromError(err)
	return bizErrorCodeMap[e.Reason]
}
